<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Working with Forms</title><style type="text/css">body {	font-family: courier, monospace;	color:#FF6633;	}	.instructions {	color: #666666;	font-family: georgia, serif;	}code {	color: #444;	font-weight: bold;	font-size: 1.1em;}</style></head><body><header><h1 class="instructions">Working with Forms: Form Data</h1></header><h2 class="instructions">Forms and the <code>$_POST</code> superglobal array</h2><p class="instructions">You'll be moving back and forth between this page and your form, so create a link to return to your form. Saves you from using the back button. However, if you don't want to input new form data, you can use the refresh button to try out your new scripts. However, you'll get a requester asking "permission" to resubmit form data (usually you don't want to, especially if it is being input in a database).</p><!-- put your link back to the form here.  --><a href="">Link to Form</a><p class="instructions">Your form data will be sent to this script according to the "method" and "action" attributes in your form tag. The "method" specifies the technical process by which the data is sent; we will be using "post." The "action" attribute contains the path to the script you want to process the form. The path to this page will send your form data here to be processed by the scripts you will write.</p><p class="instructions">The form data is held only temporarily, so every time you submit the form, the new form data will be processed by this script. Later we'll build databases to actually store our data.</p><p class="instructions">Write a script below that uses <code>print_r()</code> to show you what $_POST has sent from your form.</p><!-- write your var_dump() script here --><?php echo '<pre>';print_r($_POST);echo '</pre>';?><p class="instructions">Once you see what is in your array, you can also see the relationship between the values you put in the "name" attribute and the keys for each array element. Different kinds of form fields give you different data and we'll explore that at another time. For today, we're keeping it simple.</p><p class="instructions">Write a script to output the first name, last name, and comments from the form. Concatenate each of the variables with a space, and have it print to one line. You'll have to create variables to STORE that information so you can use it to output.</p><!-- write your output script here --><p class="instructions">Now write a script that uses the above variables to print a response to the person who submitted their form (you can make a "full name" variable, or just concatenate the first and last names):<br />Thank you [full name here] for contacting us. This is the comment you submitted to us: [comment here]</p><!-- write the "response text" script inside the text you've copied from above. --><p class="instructions">Now write a script that capitalizes the first and last name, just in case someone inputs it lazily, and also cleans up any ALL CAPS, markup or leading spaces in the form fields. Hint: we already wrote that script! Then output it into the text you've copied from above.</p><!-- write the script to clean up your variables (they are already defined) and then put it into the text you've copied from above. --></body></html>