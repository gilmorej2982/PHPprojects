<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8" />
<title>echo vs print</title>
<style type="text/css">
body {
	font-family: courier, monospace;
	color:#FF6633;
	}
	
.instructions {
	color: #666666;
	font-family: georgia, serif;
	}
</style>
</head>

<body>
<header>
<h1 class="instructions">PHP Intro:</h1> 
<p class="instructions">"echo" and "print" language constructs, quotes, escape characters, syntax</p>
</header>
<article>
<h2 class="instructions">Fix the errors one-by-one and you'll see the page.</h2>
<p class="instructions">This page has a series of php scripts that will print text and code to the page. There is an error in both the third and fourth scripts that will prevent the page from displaying. You'll have to debug them in your code editor, and then view it.</p>
<p class="instructions">Most of the scripts just illustrate simple text (strings) that will print. Some of the strings include html markup. Because PHP is embedded in your html page, you can mix it up with the markup. Sometimes the html will be hardcoded outside the PHP scripts, and sometimes it will be part of the script. It depends on the job you need to do. View the php page, the source code it generates AFTER it has been parsed, and the browser display. All three are different things.</p>
<p class="instructions">Some of the scripts also illustrate the use of "escape characters" and the difference between single and double quotes. Remember that single quotes are "literal" - whatever is inside them is just those keystrokes (except for the two escape characters for literal strings: /' and //). Double quotes will parse anything that is "parsable" inside a string, and are REQUIRED if there is something that needs to be parsed. If there isn't anything "parsable," then
double quotes will act like single quotes.</p>
<p class="instructions">Remember that strings must be quoted out, and that the quotes must match. If you need to use, within a string, the same kind of quotes that begin and end the string, those quotes INSIDE the string will need to be escaped.</p> 
<p class="instructions">BTW, php scripts don't display orange by default. I wrote styles so you could see the page content that is generated by the scripts more easily.</p>


<?php
echo "hello world"; 
?>

<?php
print "hello world";
?>
<p class="instructions">The above two scripts produce the same output, although they use different language constucts ("echo" versus "print"). Notice that altough the two scripts are on different lines in the php, they do not generate any new lines in the xhtml code OR in the browser display.</p>
<?php
echo 'hello world";
?>
<p class="instructions">The above script will throw an error message. Read the error message. What kind of error is it? Find the error. Fix it.</p>

<?php 
echo 'hello'
echo 'world'
?>
<p class="instructions">The above script will throw an error message. Read the error message. What kind of error is it? Find the error. Fix it. Once the error is fixed, put a space between the two words so they read properly.</p>

<?php
echo 'hello'.' world';
?>
<p class="instructions">Notice how the "concatenation operator" (period) works.</p>

<?php
echo '"hello world"<br /> Notice the new line that came with the break tag.';
?>

<?php
echo "<p>'hello world'\n This is a new line in the source code, but not in the browser because there is no tag for it.</p>";
?>

<?php
echo '<p>hello world\n This line is not a new line in the source code, because the "new line" command did not parse - wrong kind of quotes. Single quotes are _literal_.</p>';
?>
<p class="instructions">Notice the xhtml markup in the two scripts above. That is how we get separate paragraphs, not because the php scripts are on different lines.</p>

<?php
echo "I said, \"Hello World.\"\t";
?>
<p class="instructions">look for tab in code</p>
<?php
echo "I said, \"Hello World.\"\r";
?>
<p class="instructions">look for return in code</p>

<?php
echo nl2br("hello world \n");  
?>
<p class="instructions">Look for a line break in the browser and a break tag in the code.</p>
</article>
</body>
</html>
