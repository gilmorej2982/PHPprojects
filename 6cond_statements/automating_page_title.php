<!DOCTYPE html><html lang="en"><head><meta charset="utf=8" /><title>Automating Page Titles</title><style type="text/css">body {	font-family: courier, monospace;	color:#FF6633;	}	.instructions {	color: #666666;	font-family: georgia, serif;	}</style></head><body><header><h1 class="instructions">Use conditional statements and functions to automate page titles.</h1></header><article><h2 class="instructions">Get the <code>SCRIPT_NAME</code></h2><p class="instructions">We'll do a step-by-step automation of page titles using several different functions and a superglobal array. Remember that $_SERVER['SCRIPT_NAME'] will retrieve the path and file name of the page that is loaded. Write a script that creates a variable called $this_page and echos that to the page.</p><!-- write that script here --><?php$this_page = $_SERVER['SCRIPT_NAME'];echo $this_page;?><h2 class="instructions">Use <code>basename</code> function</h2><p class="instructions">You'll notice that you have the path, filename and file extension. We really only want the filename. Also, this is a good example of when you want to write good filenames, because if this is a generic or incomprehensible filename, this process doesn't work. It will work better with Breakfast Bonanza and Gummy World than with this page. :-) The <code>basename(path, suffix)</code> function will do this for you. Make a variable called <code>$this_page</code> to get the page name, and strip of the bits you don't need.</p><!-- write that script here --><?php$this_page = basename($_SERVER['SCRIPT_NAME'], '.php');echo $this_page;?><h2 class="instructions">Use <code>ucfirst</code> function</h2><p class="instructions">Now you want to capitalize the first letter of your filename after it is stripped of its path and suffix (file extension). Create a variable called <code>$page_title</code> for the capitalization of <code>$this_page</code>, and print it to the page.</p><!-- write that script here --><?php$this_page = basename($_SERVER['SCRIPT_NAME'], '.php');$page_title = ucfirst($this_page);echo $page_title;?><h2 class="instructions">Adding site name</h2><p class="instructions">Even though we don't have a site name for this page, write a script that joins a site name with the page title. Create a variable called <code>$site_name</code>. Call this site "Exercises: ". Then use <code>$this_page</code> and <code>$page_title</code> as you did above to echo the page title.</p><!-- write that script here --><?php$this_page = basename($_SERVER['SCRIPT_NAME'], '.php');$page_title = ucfirst($this_page);$site_name = 'Conditional Statements: ';echo $site_name.$page_title;?><p class="instructions">This will get more complex for Breakfast Bonanza and Gummy World, because we'll need to write a conditional statement that checks for the page title Index, and give an alternate name to that page. We also want to create a function called get_title() that will be called in the title tag on each page. That script will go on functions.php, and will have a script that combines the above scripts you've written with a conditional statement for the homepage. Wow. A challenge indeed!</p><h2 class="instructions">For fun: <code>str_replace</code> function</h2><p class="instructions"><code>str_replace(search, replace, originalString)</code> is a useful function that will replace characters in a string. There are other functions to do more complex replacements, but for what we want (remove underscore or other character/consecutive characters), this will do. And guess what? <code>ucwords()</code> function will capitalize each of the separate words once you replace the underscore with a space. You'll need to adjust the order in which your statements are executed to get the words capitalized after you substitute a space for the underscore.</p><!-- write that script here for FUN!!! --></article></body></html>